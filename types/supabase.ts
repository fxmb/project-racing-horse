/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/schools": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.schools.id"];
          created_at?: parameters["rowFilter.schools.created_at"];
          strapi_id?: parameters["rowFilter.schools.strapi_id"];
          name?: parameters["rowFilter.schools.name"];
          owner?: parameters["rowFilter.schools.owner"];
          phone?: parameters["rowFilter.schools.phone"];
          mobile?: parameters["rowFilter.schools.mobile"];
          email?: parameters["rowFilter.schools.email"];
          web?: parameters["rowFilter.schools.web"];
          street?: parameters["rowFilter.schools.street"];
          zip?: parameters["rowFilter.schools.zip"];
          town?: parameters["rowFilter.schools.town"];
          state?: parameters["rowFilter.schools.state"];
          country?: parameters["rowFilter.schools.country"];
          geolocation?: parameters["rowFilter.schools.geolocation"];
          updated_at?: parameters["rowFilter.schools.updated_at"];
          latitude?: parameters["rowFilter.schools.latitude"];
          longitude?: parameters["rowFilter.schools.longitude"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["schools"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** schools */
          schools?: definitions["schools"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.schools.id"];
          created_at?: parameters["rowFilter.schools.created_at"];
          strapi_id?: parameters["rowFilter.schools.strapi_id"];
          name?: parameters["rowFilter.schools.name"];
          owner?: parameters["rowFilter.schools.owner"];
          phone?: parameters["rowFilter.schools.phone"];
          mobile?: parameters["rowFilter.schools.mobile"];
          email?: parameters["rowFilter.schools.email"];
          web?: parameters["rowFilter.schools.web"];
          street?: parameters["rowFilter.schools.street"];
          zip?: parameters["rowFilter.schools.zip"];
          town?: parameters["rowFilter.schools.town"];
          state?: parameters["rowFilter.schools.state"];
          country?: parameters["rowFilter.schools.country"];
          geolocation?: parameters["rowFilter.schools.geolocation"];
          updated_at?: parameters["rowFilter.schools.updated_at"];
          latitude?: parameters["rowFilter.schools.latitude"];
          longitude?: parameters["rowFilter.schools.longitude"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.schools.id"];
          created_at?: parameters["rowFilter.schools.created_at"];
          strapi_id?: parameters["rowFilter.schools.strapi_id"];
          name?: parameters["rowFilter.schools.name"];
          owner?: parameters["rowFilter.schools.owner"];
          phone?: parameters["rowFilter.schools.phone"];
          mobile?: parameters["rowFilter.schools.mobile"];
          email?: parameters["rowFilter.schools.email"];
          web?: parameters["rowFilter.schools.web"];
          street?: parameters["rowFilter.schools.street"];
          zip?: parameters["rowFilter.schools.zip"];
          town?: parameters["rowFilter.schools.town"];
          state?: parameters["rowFilter.schools.state"];
          country?: parameters["rowFilter.schools.country"];
          geolocation?: parameters["rowFilter.schools.geolocation"];
          updated_at?: parameters["rowFilter.schools.updated_at"];
          latitude?: parameters["rowFilter.schools.latitude"];
          longitude?: parameters["rowFilter.schools.longitude"];
        };
        body: {
          /** schools */
          schools?: definitions["schools"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/find_schools": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            point: string;
            /** Format: integer */
            radius: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  schools: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    strapi_id?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    owner?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    mobile?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    web?: string;
    /** Format: text */
    street?: string;
    /** Format: text */
    zip?: string;
    /** Format: text */
    town?: string;
    /** Format: text */
    state?: string;
    /** Format: text */
    country?: string;
    /** Format: extensions.geography(Point,4326) */
    geolocation?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: numeric */
    latitude?: number;
    /** Format: numeric */
    longitude?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description schools */
  "body.schools": definitions["schools"];
  /** Format: uuid */
  "rowFilter.schools.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.schools.created_at": string;
  /** Format: text */
  "rowFilter.schools.strapi_id": string;
  /** Format: text */
  "rowFilter.schools.name": string;
  /** Format: text */
  "rowFilter.schools.owner": string;
  /** Format: text */
  "rowFilter.schools.phone": string;
  /** Format: text */
  "rowFilter.schools.mobile": string;
  /** Format: text */
  "rowFilter.schools.email": string;
  /** Format: text */
  "rowFilter.schools.web": string;
  /** Format: text */
  "rowFilter.schools.street": string;
  /** Format: text */
  "rowFilter.schools.zip": string;
  /** Format: text */
  "rowFilter.schools.town": string;
  /** Format: text */
  "rowFilter.schools.state": string;
  /** Format: text */
  "rowFilter.schools.country": string;
  /** Format: extensions.geography(Point,4326) */
  "rowFilter.schools.geolocation": string;
  /** Format: timestamp with time zone */
  "rowFilter.schools.updated_at": string;
  /** Format: numeric */
  "rowFilter.schools.latitude": string;
  /** Format: numeric */
  "rowFilter.schools.longitude": string;
}

export interface operations {}

export interface external {}
